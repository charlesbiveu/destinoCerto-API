{
  "swagger": "2.0",
  "info": {
    "title": "Destino Certo - API",
    "description": "Documentação da Destino Certo - API - projeto final módulo 02",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Insira o token JWT"
    }
  },
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Login"
        ],
        "description": "Endpoint para logar um usuário e criar um token para acesso",
        "parameters": [
          {
            "name": "loginUsuario",
            "in": "body",
            "description": "Login do usuário",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "nelsonmarcosoliveira@kimmay.com.br"
                },
                "password": {
                  "type": "string",
                  "example": "Teste123!"
                }
              },
              "required": [
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/usuarios/criar": {
      "post": {
        "tags": [
          "Usuários"
        ],
        "description": "Endpoint para criar um usuário. Senha deve conter no minimo 8 caracteres, maiuscula, minuscula e caractere especial. O cpf deve ser válido",
        "parameters": [
          {
            "name": "criarUsuario",
            "in": "body",
            "description": "Dados do usuário",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Nelson Marcos Vinicius Oliveira"
                },
                "cpf": {
                  "type": "string",
                  "example": "862.885.759-17"
                },
                "gender": {
                  "type": "string",
                  "example": "M"
                },
                "email": {
                  "type": "string",
                  "example": "nelsonmarcosoliveira@kimmay.com.br"
                },
                "password": {
                  "type": "string",
                  "example": "Teste123!"
                },
                "birthdate": {
                  "type": "string",
                  "example": "1975-08-02"
                },
                "postalcode": {
                  "type": "string",
                  "example": "88067-108"
                },
                "street": {
                  "type": "string",
                  "example": "Servidão Manoel Barbosa"
                },
                "neighborhood": {
                  "type": "string",
                  "example": "Pântano do Sul"
                },
                "city": {
                  "type": "string",
                  "example": "Florianópolis"
                },
                "state": {
                  "type": "string",
                  "example": "SC"
                },
                "number": {
                  "type": "string",
                  "example": "634"
                }
              },
              "required": [
                "name",
                "cpf",
                "gender",
                "email",
                "password",
                "birthdate",
                "postalcode",
                "street",
                "neighborhood",
                "city",
                "state",
                "number"
              ]
            }
          }
        ],
        "responses": {
          "409": {
            "description": "Conflict"
          }
        }
      }
    },
    "/local/": {
      "post": {
        "tags": [
          "Pontos de Coleta"
        ],
        "description": "Endpoint para criar um ponto de coleta",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "criarPontoDeColeta",
            "in": "body",
            "description": "Dados do ponto de coleta. Importante para teste recycle_type deve ser um array com valores de 1 a 20",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Ponto Dakir Polidoro"
                },
                "description": {
                  "type": "string",
                  "example": "Este é um ponto de coleta da comcap para recolhimento de vidros"
                },
                "recycle_types": {
                  "type": "string",
                  "example": "Vidro, Papel, Plástico"
                },
                "postalcode": {
                  "type": "string",
                  "example": "88063-565"
                },
                "street": {
                  "type": "string",
                  "example": "Rua Radialista Dakir Polidoro"
                },
                "neighborhood": {
                  "type": "string",
                  "example": "Campeche"
                },
                "city": {
                  "type": "string",
                  "example": "Florianópolis"
                },
                "state": {
                  "type": "string",
                  "example": "SC"
                },
                "number": {
                  "type": "string",
                  "example": "123"
                }
              },
              "required": [
                "name",
                "description",
                "recycle_types",
                "postalcode",
                "street",
                "neighborhood",
                "city",
                "state",
                "number"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Pontos de Coleta"
        ],
        "description": "Endpoint para listar todos os pontos de coleta cadastrados pelo usuário autenticado",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/local/{local_id}": {
      "get": {
        "tags": [
          "Pontos de Coleta"
        ],
        "description": "Endpoint para obter detalhes de um ponto de coleta específico cadastrado pelo usuário autenticado",
        "parameters": [
          {
            "name": "local_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": 1
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Pontos de Coleta"
        ],
        "description": "Endpoint para excluir um ponto de coleta específico cadastrado pelo usuário autenticado",
        "parameters": [
          {
            "name": "local_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do ponto de coleta"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "where": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Pontos de Coleta"
        ],
        "description": "Endpoint para atualizar informações de um ponto de coleta específico cadastrado pelo usuário autenticado",
        "parameters": [
          {
            "name": "local_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do ponto de coleta"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "atualizarPontoDeColeta",
            "in": "body",
            "description": "Dados atualizados do ponto de coleta",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Ponto Dakir Polidoro Atualizado"
                },
                "description": {
                  "type": "string",
                  "example": "Descrição atualizada do ponto de coleta"
                },
                "recycle_types": {
                  "type": "string",
                  "example": "Vidro, Papel, Plástico"
                },
                "postalcode": {
                  "type": "string",
                  "example": "88063-565"
                },
                "street": {
                  "type": "string",
                  "example": "Rua Radialista Dakir Polidoro"
                },
                "neighborhood": {
                  "type": "string",
                  "example": "Campeche"
                },
                "city": {
                  "type": "string",
                  "example": "Florianópolis"
                },
                "state": {
                  "type": "string",
                  "example": "SC"
                },
                "number": {
                  "type": "string",
                  "example": "123"
                }
              },
              "required": [
                "name",
                "description",
                "recycle_types",
                "postalcode",
                "street",
                "neighborhood",
                "city",
                "state",
                "number"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/local/{local_id}/maps": {
      "get": {
        "tags": [
          "Pontos de Coleta"
        ],
        "description": "Endpoint para obter o link do Google Maps de um ponto de coleta específico cadastrado pelo usuário autenticado",
        "parameters": [
          {
            "name": "local_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "ID do ponto de coleta"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "security": [
    {
      "apiKeyAuth": []
    }
  ]
}